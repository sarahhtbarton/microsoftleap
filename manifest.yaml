# A manifest describes the resources you want to create (ex: deployments, services, pods, etc) and how you want it to run inside a cluster
# Four required fields: apiVersion, kind, metadata, spec
# `kubectl create deployment matrixDeployment --image=sbacr.azurecr.io/sbimage:latest -o yaml --dry-run` for a template

# 
# `kubectl api-versions`
apiVersion: apps/v1

# kind: What kind of object you want to create (ex: Pod, Deployment, etc)
# `kubectl api-resources |more`
# `kubectl explain Deployment --recursive  | more` for a whole template of all the possible fields
kind: Deployment

# metadata: Data that helps uniquely identify the object. Under this field you can have information like name, labels, annotation etc.
# `kubectl explain Deployment.metadata | more`
metadata:
  name: matrixDeployment

# spec: contains the state you desire for the object. The spec.containers sub-field contains information about the containers that will run inside this Pod. 
# `kubectl explain Deployment.spec | more`
spec:
  # `kubectl explain Deployment.spec.template.spec.containers | more`
  containers:
  - name: matrixContainer
    image: sbacr.azurecr.io/sbimage:latest
    ports:
      - containerPort: 8080



# To run:
# kubectl apply -f <configuration file>

# Confirm pod is running with:
# kubectl get pod
