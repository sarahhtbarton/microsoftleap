apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: matrixdeployment
  name: matrixdeployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: matrixdeploymentpod
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: matrixdeploymentpod
    spec:
      containers:
      - name: matrixcontainer
        image: sbacr.azurecr.io/sbimage:latest
        resources: {}
        ports:
          - containerPort: 8080
status: {}
---
# A service in Kubernetes is an abstract way to expose an application running on a set of pods as a network service
# To get a Service template:
# `kubectl create service clusterip matrixService --tcp=8080:8080 -o yaml --dry-run=client`
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  name: matrixservice
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: matrixdeployment
status:
  loadBalancer: {}


# To run:
# `kubectl apply -f manifest.yaml`

# Troubleshoot/Confirm everything is running with:
# `kubectl get pod`
# `kubectl describe pod`
# `kubectl logs <podname>`
# `kubectl get deployment`
# `kubectl get replicaset`
# `kubectl get service`
# `kubectl describe service`
# `kubectl get ingress` - gives you IP address
